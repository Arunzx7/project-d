<%-include('../admin/adminLayout/adminHeader') %>

<section class="content-main mt-80 mb-80">
  <div class="card mx-auto card-login">
    <div class="card-body">
      <h4 class="card-title mb-4">Admin Login</h4>
      <form action="/adminValidation" class="mt-5" method="post" id="form">
        <div class="mb-3 form-outline">
          <input
            id="email"
            class="form-control"
            placeholder="Email"
            type="email"
            name="email"
          />
          <small class="text-danger"></small>
        </div>
        <div class="mb-3 form-outline">
          <input id="password" class="form-control" placeholder="Password" type="password" name="password" />
          <small class="text-danger"></small>
        </div>
        <div class="mb-3">
          <a href="#" class="float-end font-sm text-muted">Forgot password?</a>
          <label class="form-check">
            <input type="checkbox" class="form-check-input" checked="" />
            <span class="form-check-label">Remember</span>
          </label>
        </div>
        <div class="mb-4">
          <button type="submit" class="btn btn-primary w-100">Login</button>
        </div>
      </form>
    </div>
  </div>

  <%-include('../admin/adminLayout/adminFooter') %>
</section>
<script>
  document.addEventListener('DOMContentLoaded', function () {
    const form = document.getElementById('form');
    const email = document.getElementById('email');
    const password = document.getElementById('password');
    form.addEventListener('submit', function (e) {
      e.preventDefault();
      checkInputs();
    });

    function checkInputs() {
      const emailValue = email.value.trim();
      const passwordValue = password.value.trim();
      let valid = true;

      // Validating email
      if (emailValue === '') {
        setErrorFor(email, 'Email cannot be blank');
        valid = false;
      } else if (
        /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(
          emailValue
        ) === false
      ) {
        setErrorFor(email, 'Invalid email');
        valid = false;
      } else {
        setSuccessFor(email);
      }

      // Validating password
      if (passwordValue === '') {
        setErrorFor(password, 'Password cannot be blank');
        valid = false;
      } else if (/^(?=.*[a-zA-Z])(?=.*\d).{8,}$/.test(passwordValue) === false) {
        setErrorFor(password, 'Invalid Password');
        valid = false;
      } else {
        setSuccessFor(password);
      }

      // Check if all inputs are valid, then submit the form
      if (valid) {
        form.submit();
      }
    }

    // Handle validation error
    function setErrorFor(input, message) {
      const formOutline = input.parentElement;
      const small = formOutline.querySelector('small');
      small.textContent = message;
      formOutline.className = 'form-outline error';
    }

    // Handle validation success
    function setSuccessFor(input) {
      const formOutline = input.parentElement;
      formOutline.className = 'form-outline success';
    }
  });
</script>
